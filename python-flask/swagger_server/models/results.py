# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Results(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, column_name: str=None, description: str=None, values: List[float]=None):  # noqa: E501
        """Results - a model defined in Swagger

        :param column_name: The column_name of this Results.  # noqa: E501
        :type column_name: str
        :param description: The description of this Results.  # noqa: E501
        :type description: str
        :param values: The values of this Results.  # noqa: E501
        :type values: List[float]
        """
        self.swagger_types = {
            'column_name': str,
            'description': str,
            'values': List[float]
        }

        self.attribute_map = {
            'column_name': 'columnName',
            'description': 'description',
            'values': 'values'
        }

        self._column_name = column_name
        self._description = description
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Results of this Results.  # noqa: E501
        :rtype: Results
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_name(self) -> str:
        """Gets the column_name of this Results.


        :return: The column_name of this Results.
        :rtype: str
        """
        return self._column_name

    @column_name.setter
    def column_name(self, column_name: str):
        """Sets the column_name of this Results.


        :param column_name: The column_name of this Results.
        :type column_name: str
        """

        self._column_name = column_name

    @property
    def description(self) -> str:
        """Gets the description of this Results.


        :return: The description of this Results.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Results.


        :param description: The description of this Results.
        :type description: str
        """

        self._description = description

    @property
    def values(self) -> List[float]:
        """Gets the values of this Results.


        :return: The values of this Results.
        :rtype: List[float]
        """
        return self._values

    @values.setter
    def values(self, values: List[float]):
        """Sets the values of this Results.


        :param values: The values of this Results.
        :type values: List[float]
        """

        self._values = values
