swagger: '2.0'
info:
  version: "0.2"
  title: Flame API
  description: eTRANSAFE modeling framework for building and applying predictive models.
  license:
    name: GLP v3 and posterior
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  x-meta:
    serviceType: prediction
    uuid: f27b70ef-1003-4b99-8015-09ab9e052082
    provider: Universitat Pompeu Fabra
    created: 2019-09-27
    released: 2019-09-27
    lastChanged: 2019-09-27
    software: 
      - name: Flame
        version: 0.2
        description: eTRANSAFE modeling framework for building and applying predictive models.
        provider:  Universitat Pompeu Fabra
        license:  Universitat Pompeu Fabra
host: 127.0.0.1:8000
schemes:
  - http
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /alive:
    get:
      operationId: alive_list
      description: Alive service
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - alive
    parameters: []
  /api:
    get:
      operationId: api_list
      description: Returns the API definition file
      parameters: []
      responses:
        '200':
          description: ''
      produces:
        - application/yaml
      tags:
        - api
    parameters: []
  /build/model/{modelname}:
    post:
      operationId: build_model_create
      description: Build model
      parameters: []
      responses:
        '201':
          description: ''
      consumes:
        - multipart/form-data
      tags:
        - build
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
  /manage/basket/add:
    get:
      operationId: manage_basket_add_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    post:
      operationId: manage_basket_add_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters: []
  /manage/basket/{item}:
    get:
      operationId: manage_basket_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    post:
      operationId: manage_basket_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters:
      - name: item
        in: path
        required: true
        type: string
  /manage/baskets:
    get:
      operationId: manage_baskets_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters: []
  /manage/collection/{nameCollection}:
    put:
      operationId: manage_collection_update
      description: Manage models collections
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    delete:
      operationId: manage_collection_delete
      description: Manage models collections
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - manage
    parameters:
      - name: nameCollection
        in: path
        required: true
        type: string
  /manage/collections:
    get:
      operationId: manage_collections_list
      description: Return collections list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters: []
  /manage/configuration:
    get:
      operationId: manage_configuration_list
      description: Retrieve flame configuration
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    post:
      operationId: manage_configuration_create
      description: Set flame configuration (path to models, predictions and spaces)
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters: []
  /manage/model/import:
    post:
      operationId: manage_model_import_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters: []
  /manage/model/{modelname}:
    get:
      operationId: manage_model_read
      description: Retrieves model information or metadata
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    post:
      operationId: manage_model_create
      description: Creates a new flame model
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    put:
      operationId: manage_model_update
      description: Publishes a new version of the model
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    delete:
      operationId: manage_model_delete
      description: Delete endpoint
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
  /manage/model/{modelname}/refresh:
    get:
      operationId: manage_model_refresh_list
      description: Lauch a thread for refreshing a model
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
  /manage/model/{modelname}/refresh_test:
    get:
      operationId: manage_model_refresh_test_list
      description: Check if the model refresh task has finished
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
  /manage/model/{modelname}/token/{token}:
    get:
      operationId: manage_model_token_read
      description: Retrieve info of model version
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: token
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}:
    get:
      operationId: manage_model_version_read
      description: Retrieve info of model version
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    delete:
      operationId: manage_model_version_delete
      description: Delete model
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/export:
    get:
      operationId: manage_model_version_export_list
      description: Starts a thread for exporting a model. This can take a lot of time!
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/labels:
    post:
      operationId: manage_model_version_labels_create
      description: Updates model documentation
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/oformat/{oformat}/documentation:
    get:
      operationId: manage_model_version_oformat_documentation_list
      description: Retrieves model documentation
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    post:
      operationId: manage_model_version_oformat_documentation_create
      description: Updates model documentation
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: oformat
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/parameters:
    get:
      operationId: manage_model_version_parameters_list
      description: Retrieve parameters of model version
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/parameters2yaml:
    post:
      operationId: manage_model_version_parameters2yaml_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/series:
    get:
      operationId: manage_model_version_series_list
      description: Retrieve parameters of model version
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/temp_dir/{temp_dir}/export_download:
    get:
      operationId: manage_model_version_temp_dir_export_download_list
      description: returns the compressed file as a part of the response
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: temp_dir
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/temp_dir/{temp_dir}/export_test:
    get:
      operationId: manage_model_version_temp_dir_export_test_list
      description: Test if the export Thread has finished
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: temp_dir
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/validation:
    get:
      operationId: manage_model_version_validation_list
      description: Retrieve parameters of model version
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/model/{modelname}/version/{version}/yaml2parameters:
    post:
      operationId: manage_model_version_yaml2parameters_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - manage
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /manage/models:
    get:
      operationId: manage_models_list
      description: Model list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters: []
  /manage/prediction/{predictionName}:
    get:
      operationId: manage_prediction_read
      description: Retrieve info of model version
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    delete:
      operationId: manage_prediction_delete
      description: Delete model
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - manage
    parameters:
      - name: predictionName
        in: path
        required: true
        type: string
  /manage/predictions:
    get:
      operationId: manage_predictions_list
      description: Predictions list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters: []
  /manage/profile/{profileName}:
    get:
      operationId: manage_profile_read
      description: Retrieve a single prediction (#item) from a profile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    delete:
      operationId: manage_profile_delete
      description: Delete profile
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - manage
    parameters:
      - name: profileName
        in: path
        required: true
        type: string
  /manage/profile/{profileName}/summary:
    get:
      operationId: manage_profile_summary_list
      description: >-
        Retrieve summary of profile specifically oriented to populate the
        heatmap
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters:
      - name: profileName
        in: path
        required: true
        type: string
  /manage/profile/{profileName}/{item}:
    get:
      operationId: manage_profile_read
      description: Retrieve a single prediction (#item) from a profile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    delete:
      operationId: manage_profile_delete
      description: Delete profile
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - manage
    parameters:
      - name: item
        in: path
        required: true
        type: string
      - name: profileName
        in: path
        required: true
        type: string
  /manage/profiles:
    get:
      operationId: manage_profiles_list
      description: Profiles list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - manage
    parameters: []
  /predict/model/{modelname}/version/{version}:
    put:
      operationId: predict_model_version_update
      description: Prediction, input file is provided as a SDFile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /predict/model/{modelname}/version/{version}/predictionName/{predictionName}:
    put:
      operationId: predict_model_version_predictionName_update
      description: Prediction, input file is provided as a SDFile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: predictionName
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /predict/model/{modelname}/version/{version}/predictionName/{predictionName}/smiles:
    put:
      operationId: predict_model_version_predictionName_smiles_update
      description: Prediction, nput file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: predictionName
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /predict/model/{modelname}/version/{version}/predictionName/{predictionName}/smiles_list:
    put:
      operationId: predict_model_version_predictionName_smiles_list_update
      description: Prediction, nput file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: predictionName
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /predict/model/{modelname}/version/{version}/smiles:
    put:
      operationId: predict_model_version_smiles_update
      description: Prediction, nput file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /predict/profile:
    put:
      operationId: predict_profile_update
      description: Prediction, input file is provided as a SDFile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters: []
  /predict/profile/profileName/{profileName}:
    put:
      operationId: predict_profile_profileName_update
      description: Prediction, input file is provided as a SDFile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: profileName
        in: path
        required: true
        type: string
  /predict/profile/profileName/{profileName}/smiles:
    put:
      operationId: predict_profile_profileName_smiles_update
      description: Prediction, nput file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: profileName
        in: path
        required: true
        type: string
  /predict/profile/profileName/{profileName}/smiles_list:
    put:
      operationId: predict_profile_profileName_smiles_list_update
      description: Prediction, nput file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters:
      - name: profileName
        in: path
        required: true
        type: string
  /predict/profile/smiles:
    put:
      operationId: predict_profile_smiles_update
      description: Prediction, nput file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - predict
    parameters: []
  /ready:
    get:
      operationId: ready_list
      description: Ready service
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - ready
    parameters: []
  /sbuild/space/{spacename}:
    post:
      operationId: sbuild_space_create
      description: Build space
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - sbuild
    parameters:
      - name: spacename
        in: path
        required: true
        type: string
  /search/space/{spacename}/version/{version}:
    put:
      operationId: search_space_version_update
      description: Search, input file is provided as a SDFIle
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - search
    parameters:
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /search/space/{spacename}/version/{version}/searchName/{searchName}:
    put:
      operationId: search_space_version_searchName_update
      description: Search, input file is provided as a SDFIle
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - search
    parameters:
      - name: searchName
        in: path
        required: true
        type: string
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /search/space/{spacename}/version/{version}/searchName/{searchName}/smarts:
    put:
      operationId: search_space_version_searchName_smarts_update
      description: Search, input file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - search
    parameters:
      - name: searchName
        in: path
        required: true
        type: string
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /search/space/{spacename}/version/{version}/searchName/{searchName}/smiles:
    put:
      operationId: search_space_version_searchName_smiles_update
      description: Search, input file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - search
    parameters:
      - name: searchName
        in: path
        required: true
        type: string
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /search/space/{spacename}/version/{version}/smarts:
    put:
      operationId: search_space_version_smarts_update
      description: Search, input file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - search
    parameters:
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /search/space/{spacename}/version/{version}/smiles:
    put:
      operationId: search_space_version_smiles_update
      description: Search, input file is provided as a SMILES
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - search
    parameters:
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /smanage/search/{searchName}:
    get:
      operationId: smanage_search_read
      description: Retrieve info of sesrch
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - smanage
    parameters:
      - name: searchName
        in: path
        required: true
        type: string
  /smanage/search/{searchName}/TH:
    get:
      operationId: smanage_search_TH_list
      description: Retrieve info of search and reformat for Toxhub
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - smanage
    parameters:
      - name: searchName
        in: path
        required: true
        type: string
  /smanage/space/{spacename}:
    get:
      operationId: smanage_space_read
      description: Retrieves model information or metadata
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - smanage
    post:
      operationId: smanage_space_create
      description: Creates a new flame space
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - smanage
    put:
      operationId: smanage_space_update
      description: Publishes a new version of the space
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - smanage
    delete:
      operationId: smanage_space_delete
      description: Delete space
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - smanage
    parameters:
      - name: spacename
        in: path
        required: true
        type: string
  /smanage/space/{spacename}/version/{version}:
    get:
      operationId: smanage_space_version_read
      description: Retrieves space information or metadata
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - smanage
    delete:
      operationId: smanage_space_version_delete
      description: Delete space
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - smanage
    parameters:
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /smanage/space/{spacename}/version/{version}/parameters:
    get:
      operationId: smanage_space_version_parameters_list
      description: Retrieve parameters of space version
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - smanage
    parameters:
      - name: spacename
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
  /smanage/spaces:
    get:
      operationId: smanage_spaces_list
      description: Spaces list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - smanage
    parameters: []
  /verification/report/{verificationname}/{verificatorname}:
    post:
      operationId: verification_report_create
      description: Generate a verification report
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - verification
    parameters:
      - name: verificationname
        in: path
        required: true
        type: string
      - name: verificatorname
        in: path
        required: true
        type: string
  /verification/sign/{verificatorname}/{nreport}:
    post:
      operationId: verification_sign_create
      description: Sign report
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - verification
    parameters:
      - name: nreport
        in: path
        required: true
        type: string
      - name: verificatorname
        in: path
        required: true
        type: string
  /verification/verification/{modelname}/{version}:
    get:
      operationId: verification_verification_read
      description: Retrieve info of model verification
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - verification
    post:
      operationId: verification_verification_create
      description: Generate Model verification
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - verification
    delete:
      operationId: verification_verification_delete
      description: Delete Model verification
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - verification
    parameters:
      - name: modelname
        in: path
        required: true
        type: string
      - name: version
        in: path
        required: true
        type: string
definitions: {}